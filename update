#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim-bundle-mate script by jungo
# https://github.com/jungo-git/vim-bundle-mate

import re
from subprocess import Popen
from urllib.request import urlopen
from os import makedirs, unlink, path
from shutil import rmtree
from zipfile import ZipFile

# git
# repository, plugin name
git = (
        ('https://github.com/msanders/snipmate.vim.git','snipmate'),
      )
# plugin name, src_id, type/directory
vimorg = (
        ('python-complete','10872','autoload'),
        ('buffer-explorer','14208','zip'),
        ('supertab-continued','15029','vba'),
      )

def git_clone():
    global git
    for arg in git:
        # first, remove existent dir
        try:
            # FIXME: use os.path.join
            rmtree('bundle/'+arg[1])
            print('removed dir: '+'bundle/'+arg[1])
        except OSError as oserr:
            print('OSError: {0}'.format(oserr))
        else:
            # FIXME: use os.path.join
            cmd = 'git clone ' + arg[0] + ' bundle/' + arg[1]
            Popen(cmd, shell=True).communicate()
            print()

def download_vimorg():
    global vimorg
    for arg in vimorg:
        # TODO: remove old dir or file
        # FIXME: use os.path.join
        if arg[2] == 'zip' or arg[2] == 'vba':
            filepath = 'bundle/' + arg[0]
        else:
            filepath = 'bundle/' + arg[0] + '/' + arg[2]
        makedirs(filepath, exist_ok=True)
        url = "http://www.vim.org/scripts/download_script.php?src_id=" + arg[1]
        u = urlopen(url)
        filename = u.info().get_filename()
        # FIXME: use os.path.join
        fullpath = filepath + '/' + filename
        print('vim.org: ' + url)
        print('Downloading ' + filename + ' into ' + filepath)
        with open(fullpath,'wb') as f:
            f.write(u.read())
        u.close()

        # check file type and do additional actions
        # zip
        if arg[2] == 'zip':
            with ZipFile(fullpath, 'r') as myzip:
                print('Extracting archive...')
                myzip.extractall(filepath)
                # extractall doesn't return a value
                print('Done.')
            unlink(fullpath)
        # vimball
        elif arg[2] == 'vba':
            # extract vimball
            with open(filename, 'r') as vba:
                content = vba.readlines()
                header = ''.join(content[0:3])

                it = iter(content)
                shift = 2
                for i, line in enumerate(it):
                    matches = re.match('^(.*?)\t\[\[\[1$', line)
                    if matches:
                        vba_filename = path.basename(matches.group(1))
                        vba_filepath = path.join(filepath, path.dirname(matches.group(1)))
                        vba_fullpath = path.join(filepath, filename)
                        linecount = int(next(it))
                        print('Vimball files:')
                        print(vba_fullpath + ':', linecount, 'lines')
                        makedirs(vba_filepath, exist_ok=True)
                        with open(vba_fullpath, 'w') as f:
                            f.writelines(content[i+shift:i+shift+linecount])
                        shift += 1

        print()

git_clone()
download_vimorg()
